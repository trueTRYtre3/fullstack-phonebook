{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","api/server.js","App.js","index.js"],"names":["Filter","props","onChange","e","setFilterContact","persons","filter","element","name","target","value","PersonForm","useState","newName","setNewName","newNumber","setNewNumber","onSubmit","preventDefault","some","window","confirm","updateContact","createContact","type","Persons","contactList","map","contact","i","number","onClick","deleteContact","id","confirmDeletion","BASE_URL","axios","get","then","response","data","newObject","post","put","delete","App","setPersons","filterContact","infoEntered","setInfoEntered","success","setSuccess","successName","setSuccessName","serverInfo","setServerInfo","useEffect","contacts","per","serverSuccess","className","word","serverFail","length","find","person","changeContact","concat","catch","error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.de811641.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Filter = (props) => {\r\n    \r\n    const filterContacts = e => {\r\n        props.setFilterContact(props.persons.filter(element => element.name === e.target.value));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            Filter shown with:  <input \r\n                onChange={filterContacts}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter;","import React, { useState } from 'react';\r\n\r\nconst PersonForm = props => {\r\n\r\n    const [ newName, setNewName ] = useState('');\r\n    const [ newNumber, setNewNumber ] = useState('');\r\n\r\n\r\n    const submitAction = e => {\r\n        e.preventDefault();\r\n        if (props.persons.some(element => element.name === newName)) {\r\n            if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one`)) {\r\n                props.updateContact(newName, newNumber);\r\n                setNewName('');\r\n                setNewNumber('');\r\n            }\r\n        } else {\r\n            props.createContact(newName, newNumber);\r\n            setNewName('');\r\n            setNewNumber('');\r\n        }\r\n    }    \r\n    \r\n    return (\r\n        <form onSubmit={submitAction}>\r\n            <div>\r\n                name: <input onChange={e => setNewName(e.target.value)} value={newName} />\r\n            </div>\r\n            <div>\r\n                number: <input onChange={ e => setNewNumber(e.target.value)} value={newNumber} />\r\n            </div>\r\n            <div>\r\n                <button type='submit'>add</button>\r\n            </div>\r\n        </form>\r\n\r\n    )\r\n}\r\n\r\nexport default PersonForm;","import React from 'react';\r\n\r\nconst Persons = props => {\r\n\r\n    const confirmDeletion = contact => {\r\n        if (window.confirm(`Delete ${contact.name}`)) {\r\n            props.deleteContact(contact.id, contact.name)\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            {props.contactList.map((contact,i) => (\r\n                <p key={i}>\r\n                    {contact.name} {contact.number}  <button onClick={() => confirmDeletion(contact)}>Delete</button>\r\n                </p>\r\n            ))}\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Persons;","import axios from 'axios';\r\nconst BASE_URL = '/api/persons';\r\n\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(BASE_URL);\r\n    return request.then(response => response.data);\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(BASE_URL, newObject);\r\n    return request.then(response => response.data);\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${BASE_URL}/${id}`, newObject);\r\n    return request.then(response => response.data);\r\n}\r\n\r\nconst deleteId = id => {\r\n    const request = axios.delete(`${BASE_URL}/${id}`);\r\n    return request.then(response => response.data);\r\n}\r\n\r\nexport default {getAll, create, update, deleteId};","import React, { useState, useEffect } from 'react';\n\nimport Filter from './components/Filter';\nimport PersonForm from './components/PersonForm';\nimport Persons from './components/Persons';\n\nimport contacts from './api/server';\n\n\nconst App = () => {\n  \n  const [persons, setPersons] = useState([]);\n  const [ filterContact, setFilterContact ] = useState([]);\n\n  const [ infoEntered, setInfoEntered ] = useState(false);\n  const [ success, setSuccess ] = useState(false);\n  const [ successName, setSuccessName ] = useState({});\n  const [ serverInfo, setServerInfo ] = useState('');\n\n  useEffect(() => {\n    contacts\n      .getAll()\n      .then(per => {\n        setPersons(per)   \n      })\n  }, [])\n\n  const createContact = (name, newNumber) => {\n    const newContact = {\n      name: name,\n      number: newNumber\n    }\n    contacts\n      .create(newContact)\n      .then(response => {\n        setPersons(persons.concat(response));\n        setInfoEntered(true);\n        setSuccess(true);\n        setSuccessName({name: name, word: 'Added'});\n      })\n      .catch(error => {\n        setSuccess(false);\n        setInfoEntered(true);\n        setServerInfo(error.response.data.error)\n      })\n  }\n\n  const updateContact = (name, newNumber) => {\n    const contact = persons.find(person => person.name === name);\n    const changeContact = {...contact, number: newNumber}\n\n    contacts\n      .update(contact.id, changeContact)\n      .then(response => {\n        setPersons(persons.map(person => person.name !== name ? person : response));\n        setInfoEntered(true);\n        setSuccess(true);\n        setSuccessName({name: name, word: 'Updated'});\n      })\n  }\n\n  const deleteContact = (id, name) => {\n    contacts\n      .deleteId(id)\n      .then(() => {\n        setPersons(persons.filter(person => person.id !== id));\n        setInfoEntered(true);\n        setSuccessName({name: name, word: 'Deleted'});\n      })\n      .catch(error => {\n        setInfoEntered(true);\n        setSuccess(false);\n        setServerInfo(`Information of ${name} has already been removed from the server`);\n        setPersons(persons.filter(person => person.id !== id));\n      })\n  }\n \n  const serverSuccess = <h2 className=\"message\">{successName.word} {successName.name}</h2>;\n  const serverFail = <h2 className=\"errorMessage\">{serverInfo}</h2>;\n\n  const contactList = filterContact.length !== 0 ? filterContact : persons;\n  return (\n    <div>\n      <h1>Phonebook</h1>\n        {infoEntered && (success ? serverSuccess : serverFail)}\n        <Filter \n          setFilterContact={setFilterContact} \n          persons={persons}\n        />\n      <h1>Add New Contact</h1>\n        <PersonForm \n          persons={persons} \n          setPersons={setPersons}\n          updateContact={updateContact}\n          createContact={createContact}\n        />\n      <h1>Contact List</h1>\n        <Persons \n          contactList={contactList} \n          deleteContact={deleteContact} \n        />\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}